{
	"name": "copilot-with-context",
	"displayName": "Copilot with context",
	"publisher": "JeroenV",
	"description": "",
	"version": "0.0.7",
	"repository": {
		"type": "git",
		"url": "https://github.com/JeroenVerstraelen/CopilotWithContext"
	},
	"engines": {
		"vscode": "^1.68.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:copilot-with-context.addSelectedTextAsSnippet",
		"onCommand:copilot-with-context.pasteSnippet",
		"onCommand:copilot-with-context.removeSnippetsFromFile",
		"onCommand:copilot-with-context.pasteSymbolAsSnippet",
		"onCommand:copilot-with-context.rewriteRestOfFunction"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "copilot-with-context.addSelectedTextAsSnippet",
				"title": "Copilot: Add selected text as a snippet (copilot_snippets.json)"
			},
			{
				"command": "copilot-with-context.pasteSnippet",
				"title": "Copilot: Paste copilot snippet as a comment above your cursor"
			},
			{
				"command": "copilot-with-context.removeSnippetsFromFile",
				"title": "Copilot: Remove all snippets from the current file"
			},
			{
				"command": "copilot-with-context.pasteSymbolAsSnippet",
				"title": "Copilot: paste a symbol from your workspace as a snippet"
			},
			{
				"command": "copilot-with-context.rewriteRestOfFunction",
				"title": "Copilot: Rewrite the rest of the function below your cursor"
			}
		],
		"configuration": {
			"title": "Copilot With Context",
			"properties": {
			  "copilotcontext.commentSymbol": {
				"type": "string",
				"default": "//",
				"description": "The symbol used to paste snippets as comments.",
				"scope": "language-overridable"
			  },
			  "copilotcontext.snippetStartSymbol": {
				"type": "string",
				"default": "<snippet>",
				"description": "The start symbol for a snippet.",
				"scope": "language-overridable"
			  },
			  "copilotcontext.snippetEndSymbol": {
				"type": "string",
				"default": "</snippet>",
				"description": "The end symbol for a snippet.",
				"scope": "language-overridable"
			  },
			  "copilotcontext.snippetFileName": {
				"type": "string",
				"default": "copilot_snippets.json",
				"description": "The name of the snippet file."
			  },
			  "copilotcontext.languageFileExtension": {
				"type": "string",
				"default": ".py",
				"description": "The file extension to look for symbols. You should not change this unless no symbols are showing in your search bar.",
				"scope": "language-overridable"
			  },
			  "copilotcontext.collapseSnippetComments": {
				"type": "boolean",
				"default": true,
				"description": "Collapse snippet comments.",
				"scope": "language-overridable"
			  }
			}
		},
		"configurationDefaults": {
			"[python]": {
			  "copilotcontext.commentSymbol": "#",
			  "copilotcontext.languageFileExtension": ".py"
			},
			"[javascript]": {
			  "copilotcontext.commentSymbol": "//",
			  "copilotcontext.languageFileExtension": ".js"
			},
			"[go]": {
			  "copilotcontext.commentSymbol": "//",
			  "copilotcontext.languageFileExtension": ".go"
			},
			"[csharp]": {
			  "copilotcontext.commentSymbol": "//",
			  "copilotcontext.languageFileExtension": ".cs"
			},
			"[c]": {
			  "copilotcontext.commentSymbol": "//",
			  "copilotcontext.languageFileExtension": ".c"
			},
			"[cpp]": {
			  "copilotcontext.commentSymbol": "//",
			  "copilotcontext.languageFileExtension": ".cpp"
			},
			"[java]": {
			  "copilotcontext.commentSymbol": "//",
			  "copilotcontext.languageFileExtension": ".java"
			},
			"[kotlin]": {
			  "copilotcontext.commentSymbol": "//",
			  "copilotcontext.languageFileExtension": ".kt"
			},
			"[swift]": {
			  "copilotcontext.commentSymbol": "//",
			  "copilotcontext.languageFileExtension": ".swift"
			},
			"[php]": {
			  "copilotcontext.commentSymbol": "//",
			  "copilotcontext.languageFileExtension": ".php"
			},
			"[ruby]": {
			  "copilotcontext.commentSymbol": "#",
			  "copilotcontext.languageFileExtension": ".rb"
			},
			"[rust]": {
			  "copilotcontext.commentSymbol": "//",
			  "copilotcontext.languageFileExtension": ".rs"
			},
			"[scala]": {
			  "copilotcontext.commentSymbol": "//",
			  "copilotcontext.languageFileExtension": ".scala"
			},
			"[typescript]": {
			  "copilotcontext.commentSymbol": "//",
			  "copilotcontext.languageFileExtension": ".ts"
			},
			"[visualbasic]": {
			  "copilotcontext.commentSymbol": "'",
			  "copilotcontext.languageFileExtension": ".vb"
			}
		}
	},
	"scripts": {
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js",
		"vscode:prepublish": "npm run esbuild-base -- --minify",
		"esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
		"esbuild": "npm run esbuild-base -- --sourcemap",
		"esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
		"test-compile": "tsc -p ./"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.1",
		"@types/node": "16.x",
		"@types/vscode": "^1.68.0",
		"@typescript-eslint/eslint-plugin": "^5.27.0",
		"@typescript-eslint/parser": "^5.27.0",
		"@vscode/test-electron": "^2.1.3",
		"esbuild": "^0.14.46",
		"eslint": "^8.16.0",
		"glob": "^8.0.3",
		"mocha": "^10.0.0",
		"typescript": "^4.7.2"
	}
}
